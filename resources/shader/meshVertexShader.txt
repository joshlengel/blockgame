#version 400 core

layout(location = 0) in vec3 vertex;
layout(location = 1) in vec2 textureCoords;
layout(location = 2) in float lightingValue;

out vec2 passTextureCoords;
out float passLightingValue;
out float visibility;

uniform mat4 projectionView;
uniform vec3 cameraPosition;

const float density = 0.01;
const float gradient = 2;

void main() {
	gl_Position = projectionView * vec4(vertex, 1.0);
	
	passTextureCoords = textureCoords;
	passLightingValue = lightingValue;
	
	float dist = length(cameraPosition - vertex);
	visibility = exp(-pow(dist * density, gradient));
}